Первый файл с целью отправки (внесём немного изменений).

git init - создать репозиторий в текущей папке (до которой дошли командой cd)
git clone - скопировать/скачать себе содержание репозитория
git add "index.html" или git add . - добавить к commit'у файл такой-то, либо все файлы (если .)
git commit -m "Комментарий об изменения" - зафиксировать изменения
git pull - загрузить/скачать изменения с репозитория
git stash - "припрятать" изменения...
git branch и -v - смотреть инфу по веткам, а -v - № актуального коммита.
git branch develop - создать ветку "develop"
git checkout develop - перейти на ветку "develop"
git checkout -b repo_name - создать ветку и перейти на неё
git branch -m change_name - переименовать текущий репозиторий
git checkout №коммита - перейти к этому коммиту (пругкуть во времени)
git push --set-upstream origin develop - чтобы залить новую ветку
git branch -d branch_name - удалить ветку (только надо находиться не в ней, иначе ошибка)

--- Соединяем ветки (merge) ---
git checkout master - встаём на ветку, в которую хотим скачать изменения с другой ветки
git merge hotfix - вписываем имя той ветки, из которой хотим скачать изменения
-------------------------------

--- Отмена ---
git checkout -- index.html или git checkout . - отменить все изменения в файле index.html или во всех файлах
Если уже сделал git add index.html, но хочешь отменить,
сначала нужно git reset index.html, затем git checkout -- index.html

Если уже сделали и add, и commit - тогда:
git reset --hard HEAD~1 (было ^1), git reset --soft HEAD~1  (было ^1) - отменить изменения, но оставить их в файле. Дальше можно что-то поменять и закоммитить заного,
либо git reset . - поубирать файлы из очереди на коммит, затем git checkout -- . чтобы совсем отменить.
--------------

